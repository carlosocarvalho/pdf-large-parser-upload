version: "3.1"
services:
    mongodb:
        image: mongo
        volumes:
            - mongo-full-text-volume:/usr/share/elasticsearch/data
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: root
            MONGO_INITDB_DATABASE: laravel
        ports:
            - "27015:27017"
        networks:
            - app-net
    elastic:
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.3.0"
        volumes:
            - elastic-full-text-volume:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            - discovery.type=single-node
        networks:
            - app-net
    redis:
        image: "redis:5-alpine"
        ports:
            - "6379:6379"
        networks:
            - app-net
    db:
        image: postgres:12-alpine
        environment:
            POSTGRES_PASSWORD: fulltext
            POSTGRES_DB: fulltext
            POSTGRES_USER: fulltext
        volumes:
            - db-full-text-volume:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - app-net
    php:
        image: "carlosocarvalho/app-fulltext-laravel:1.0.1"
        working_dir: /application
        # command: ['./.docker/php-fpm/entrypoint.sh']
        volumes:
            - "./:/application"
            - "./.docker/php-fpm/php.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini"
        networks:
            - app-net
    queue:
        image: "carlosocarvalho/app-fulltext-laravel:1.0.1"
        volumes:
            - ./:/application
            - ./.docker/php-fpm/php.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini
        command: "php artisan horizon"
        networks:
            - app-net
    schedule:
        image: "carlosocarvalho/app-fulltext-laravel:1.0.1"

        volumes:
            - "./:/application"
            - "./.docker/php-fpm/php.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini"
        environment:
            - CONTAINER_ROLE=scheduler
        command: start
        networks:
            - app-net
    nginx:
        image: "nginx:alpine"
        working_dir: /application
        volumes:
            - ".:/application"
            - "./.docker/nginx/nginx.conf:/etc/nginx/conf.d/app-net.conf"
        deploy:
            labels:
                traefik.docker.network: web
                traefik.enable: "true"
                traefik.frontend: fulltext
                traefik.frontend.rule: "Host: 165.227.90.191"
                traefik.port: "80"
        networks:
            - web
            - app-net
networks:
    app-net:
        driver: overlay
    web:
        external: true
volumes:
    elastic-full-text-volume:
        driver: local
    mongo-full-text-volume:
        driver: local
    db-full-text-volume:
        driver: local
